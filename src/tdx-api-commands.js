module.exports = {
  abortDatabotInstance: ["instanceId"],
  addAccount: ["options", "waitopt"],
  addAccountApplicationConnection: ["accountId", "applicationId", "waitopt"],
  addData: ["datasetId", "data", "doNotThrowopt"],
  addResource: ["options", "waitopt"],
  addResourceAccess: ["resourceId", "accountId", "sourceId", "access"],
  addTrustedExchange: ["options"],
  addZoneConnection: ["options"],
  approveAccount: ["username", "approved"],
  authenticate: ["id", "secret", "ttlopt"],
  createTDXToken: ["username", "ipopt", "ttlopt"],
  deleteAccount: ["username"],
  deleteData: ["datasetId", "data", "doNotThrowopt"],
  deleteDatabotHost: ["payload"],
  deleteDatabotInstance: ["instanceId"],
  deleteDataByQuery: ["datasetId", "query", "doNotThrowopt"],
  deleteManyResources: ["resourceList"],
  deleteResource: ["resourceId"],
  deleteZoneConnection: ["id"],
  downloadResource: ["resourceId"],
  exchangeTDXToken: ["token", "validateIPopt", "exchangeIPopt", "ttlopt"],
  fileUpload: ["resourceId", "file", "streamopt", "compressedopt", "base64Encodedopt"],
  getAccount: ["accountId"],
  getAccounts: ["filter"],
  getAggregateData: ["datasetId", "pipeline", "ndJSONopt"],
  getAggregateDataStream: ["datasetId", "pipeline", "ndJSONopt"],
  getAuthenticatedAccount: [""],
  getData: ["datasetId", "filteropt", "projectionopt", "optionsopt", "ndJSONopt"],
  getDatabotInstance: ["instanceId"],
  getDatabotInstanceOutput: ["instanceId", "processIdopt"],
  getDatabotInstanceStatus: ["instanceId"],
  getDataCount: ["datasetId", "filteropt"],
  getDatasetData: ["datasetId", "filteropt", "projectionopt", "optionsopt", "ndJSONopt"],
  getDatasetDataCount: ["datasetId", "filteropt"],
  getDatasetDataStream: ["datasetId", "filteropt", "projectionopt", "optionsopt", "ndJSONopt"],
  getDataStream: ["datasetId", "filteropt", "projectionopt", "optionsopt", "ndJSONopt"],
  getDistinct: ["datasetId", "key", "filteropt"],
  getNDData: [""],
  getResource: ["resourceId", "noThrowopt"],
  getResourceAccess: ["resourceId"],
  getResourceAncestors: ["resourceId"],
  getResources: ["filteropt", "projectionopt", "optionsopt"],
  getResourcesWithSchema: ["schemaId"],
  getTDXToken: ["tdx"],
  getZone: ["accountId"],
  isInGroup: ["accountId", "groupId"],
  moveResource: ["id", "fromParentId", "toParentId"],
  patchData: ["datasetId", "data", "doNotThrowopt"],
  rebuildResourceIndex: ["resourceId"],
  registerDatabotHost: ["payload"],
  removeResourceAccess: ["resourceId", "accountId", "addedBy", "sourceId", "access"],
  resetAccount: ["username", "key"],
  rollbackCommand: [],
  sendDatabotHostCommand: ["command", "hostId", "hostIpopt", "hostPortopt", "payloadopt"],
  setResourceImporting: ["resourceId", "importing"],
  setResourcePermissiveShare: ["resourceId", "allowPermissive"],
  setResourceSchema: ["resourceId", "schema"],
  setResourceShareMode: ["resourceId", "shareMode"],
  setResourceStore: ["resourceId", "store", "storeSizeopt"],
  setResourceTextContent: ["resourceId", "textContent"],
  startDatabotInstance: ["databotId", "payload"],
  stopDatabotInstance: ["instanceId", "mode"],
  suspendResourceIndex: ["resourceId"],
  truncateResource: ["resourceId"],
  updateAccount: ["username", "options"],
  updateData: ["datasetId", "data", "upsertopt", "doNotThrowopt", "optsopt"],
  updateDatabotHostStatus: ["payload"],
  updateDataByQuery: ["datasetId", "query", "doNotThrowopt"],
  updateResource: ["resourceId", "update"],
  validateTDXToken: ["token", "ipopt"],
  verifyAccount: ["username", "approved"],
  writeDatabotHostInstanceOutput: ["output"],
};
